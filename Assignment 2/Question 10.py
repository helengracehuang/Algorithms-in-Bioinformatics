# Prompt: Find a Highest-Scoring Alignment of Two Strings
# Given: Two amino acid strings.
# Return: The maximum alignment score of these strings followed by an alignment achieving this maximum score. Use the BLOSUM62 scoring matrix and indel penalty Ïƒ = 5. (If multiple alignments achieving the maximum score exist, you may return any one.)
import numpy as np
import re
import sys

def score(str1, str2):
	global ScoreMatrix
	global Backtrack
	global protein

	ScoreMatrix = np.zeros([len(str1)+1, len(str2)+1], dtype = int)
	Backtrack = np.zeros([len(str1)+1, len(str2)+1], dtype = int)

	ScoreMatrix[0][0] = 0
	Backtrack[0][0] = 0

	for i in range(1, len(str1)+1):
		ScoreMatrix[i][0] = ScoreMatrix[i-1][0]-5 # indel penalty = 5
		Backtrack[i][0] = 1
	for j in range(1, len(str2)+1):
		ScoreMatrix[0][j] = ScoreMatrix[0][j-1]-5 # indel penalty = 5
		Backtrack[0][j] = 2
	for i in range(1, len(str1)+1):
		for j in range(1, len(str2)+1):
			ScoreMatrix[i][j] = max(ScoreMatrix[i-1][j]-5, ScoreMatrix[i][j-1]-5, ScoreMatrix[i-1][j-1]+BLOSUM62[protein[str1[i-1]]][protein[str2[j-1]]])
			if ScoreMatrix[i][j] == ScoreMatrix[i-1][j]-5:
				Backtrack[i][j] = 1 #down-insertion
			elif ScoreMatrix[i][j] == ScoreMatrix[i][j-1]-5:
				Backtrack[i][j] = 2 #right-deletion
			elif ScoreMatrix[i][j] == ScoreMatrix[i-1][j-1]+BLOSUM62[protein[str1[i-1]]][protein[str2[j-1]]]:
				Backtrack[i][j] = 3 #diagonal-match or SNP
	return(ScoreMatrix[len(str1)][len(str2)])

def Output(bt, str1, str2, i, j):
	global Backtrack
	global outputstr1
	global outputstr2

	if i == 0 and j == 0:
		return
	if Backtrack[i][j] == 1:
		Output(bt, str1, str2, i-1, j)
		outputstr1 += str1[i-1]
		outputstr2 += '-'
	elif Backtrack[i][j] == 2:
		Output(bt, str1, str2, i, j-1)
		outputstr1 += '-'
		outputstr2 += str2[j-1]
	elif Backtrack[i][j] == 3:
		Output(bt, str1, str2, i-1, j-1)
		outputstr1 += str1[i-1]
		outputstr2 += str2[j-1]

def main():
	global BLOSUM62
	global protein
	global ScoreMatrix
	global outputstr1
	global outputstr2
	global Backtrack

	sys.setrecursionlimit(100000)

	BLOSUM62 = []
	protein = {'A':0, 'C':1, 'D':2, 'E':3, 'F':4, 'G':5, 'H':6, 'I':7, 'K':8, 'L':9, 'M':10, 'N':11, 'P':12, 'Q':13, 'R':14, 'S':15, 'T':16, 'V':17, 'W':18, 'Y':19}
	s = []
	s.append("4  0 -2 -1 -2  0 -2 -1 -1 -1 -1 -2 -1 -1 -1  1  0  0 -3 -2") #A.1
	s.append("0  9 -3 -4 -2 -3 -3 -1 -3 -1 -1 -3 -3 -3 -3 -1 -1 -1 -2 -2") #C.2
	s.append("-2 -3  6  2 -3 -1 -1 -3 -1 -4 -3  1 -1  0 -2  0 -1 -3 -4 -3") #D.3
	s.append("-1 -4  2  5 -3 -2  0 -3  1 -3 -2  0 -1  2  0  0 -1 -2 -3 -2") #E.4
	s.append("-2 -2 -3 -3  6 -3 -1  0 -3  0  0 -3 -4 -3 -3 -2 -2 -1  1  3") #F.5
	s.append("0 -3 -1 -2 -3  6 -2 -4 -2 -4 -3  0 -2 -2 -2  0 -2 -3 -2 -3") #G.6
	s.append("-2 -3 -1  0 -1 -2  8 -3 -1 -3 -2  1 -2  0  0 -1 -2 -3 -2  2") #H.7
	s.append("-1 -1 -3 -3  0 -4 -3  4 -3  2  1 -3 -3 -3 -3 -2 -1  3 -3 -1") #I.8
	s.append("-1 -3 -1  1 -3 -2 -1 -3  5 -2 -1  0 -1  1  2  0 -1 -2 -3 -2") #K.9
	s.append("-1 -1 -4 -3  0 -4 -3  2 -2  4  2 -3 -3 -2 -2 -2 -1  1 -2 -1") #L.10
	s.append("-1 -1 -3 -2  0 -3 -2  1 -1  2  5 -2 -2  0 -1 -1 -1  1 -1 -1") #M.11
	s.append("-2 -3  1  0 -3  0  1 -3  0 -3 -2  6 -2  0  0  1  0 -3 -4 -2") #N.12
	s.append("-1 -3 -1 -1 -4 -2 -2 -3 -1 -3 -2 -2  7 -1 -2 -1 -1 -2 -4 -3") #P.13
	s.append("-1 -3  0  2 -3 -2  0 -3  1 -2  0  0 -1  5  1  0 -1 -2 -2 -1") #Q.14
	s.append("-1 -3 -2  0 -3 -2  0 -3  2 -2 -1  0 -2  1  5 -1 -1 -3 -3 -2") #R.15
	s.append("1 -1  0  0 -2  0 -1 -2  0 -2 -1  1 -1  0 -1  4  1 -2 -3 -2") #S.16
	s.append("0 -1 -1 -1 -2 -2 -2 -1 -1 -1 -1  0 -1 -1 -1  1  5  0 -2 -2") #T.17
	s.append("0 -1 -3 -2 -1 -3 -3  3 -2  1  1 -3 -2 -2 -3 -2  0  4 -3 -1") #V.18
	s.append("-3 -2 -4 -3  1 -2 -2 -3 -3 -2 -1 -4 -4 -2 -3 -3 -2 -3 11  2") #W.19
	s.append("-2 -2 -3 -2  3 -3  2 -1 -2 -1 -1 -2 -3 -1 -2 -2 -2 -1  2  7") #Y.20
	for i in range(20):
		line = re.split('\s+', s[i]) #Regular Expression
		line = [int(k) for k in line]
		BLOSUM62.append(line)
	
	# s1 = "PLEASANTLY"
	# s2 = "MEANLY"

	# s1 = "ILYPRQSMICMSFCFWDMWKKDVPVVLMMFLERRQMQSVFSWLVTVKTDCGKGIYNHRKYLGLPTMTAGDWHWIKKQNDPHEWFQGRLETAWLHSTFLYWKYFECDAVKVCMDTFGLFGHCDWDQQIHTCTHENEPAIAFLDLYCRHSPMCDKLYPVWDMACQTCHFHHSWFCRNQEMWMKGDVDDWQWGYHYHTINSAQCNQWFKEICKDMGWDSVFPPRHNCQRHKKCMPALYAGIWMATDHACTFMVRLIYTENIAEWHQVYCYRSMNMFTCGNVCLRCKSWIFVKNYMMAPVVNDPMIEAFYKRCCILGKAWYDMWGICPVERKSHWEIYAKDLLSFESCCSQKKQNCYTDNWGLEYRLFFQSIQMNTDPHYCQTHVCWISAMFPIYSPFYTSGPKEFYMWLQARIDQNMHGHANHYVTSGNWDSVYTPEKRAGVFPVVVPVWYPPQMCNDYIKLTYECERFHVEGTFGCNRWDLGCRRYIIFQCPYCDTMKICYVDQWRSIKEGQFRMSGYPNHGYWFVHDDHTNEWCNQPVLAKFVRSKIVAICKKSQTVFHYAYTPGYNATWPQTNVCERMYGPHDNLLNNQQNVTFWWKMVPNCGMQILISCHNKMKWPTSHYVFMRLKCMHVLMQMEYLDHFTGPGEGDFCRNMQPYMHQDLHWEGSMRAILEYQAEHHRRAFRAELCAQYDQEIILWSGGWGVQDCGFHANYDGSLQVVSGEPCSMWCTTVMQYYADCWEKCMFA"
	# s2 = "ILIPRQQMGCFPFPWHFDFCFWSAHHSLVVPLNPQMQTVFQNRGLDRVTVKTDCHDHRWKWIYNLGLPTMTAGDWHFIKKHVVRANNPHQWFQGRLTTAWLHSTFLYKKTEYCLVRHSNCCHCDWDQIIHTCAFIAFLDLYQRHWPMCDKLYCHFHHSWFCRNQEMSMDWNQWFPWDSVPRANCLEEGALIALYAGIWANSMKRDMKTDHACTVRLIYVCELHAWLKYCYTSINMLCGNVCLRCKSWIFVKLFYMYAPVVNTIEANSPHYYKRCCILGQGICPVERKSHCEIYAKDLLSFESCCSQKQNCYTDNWGLEYRLFFQHIQMECTDPHANRGWTSCQTAKYWHFNLDDRPPKEFYMWLQATPTDLCMYQHCLMFKIVKQNFRKQHGHANPAASTSGNWDSVYTPEKMAYKDWYVSHPPVDMRRNGSKMVPVWYPPGIWHWKQSYKLTYECFFTVPGRFHVEGTFGCNRWDHQPGTRRDRQANHQFQCPYSDTMAIWEHAYTYVDQWRSIKEGQMPMSGYPNHGQWNVHDDHTNEQERSPICNQPVLAKFVRSKNVSNHEICKKSQTVFHWACEAQTNVCERMLNNQHVAVKRNVTFWWQMVPNCLWSCHNKMTWPTRPEQHRLFFVKMRLKCMHEYLDVAPSDFCRNMQAYMHSMRAILEYQADFDLKRRLRAIAPMDLCAQYDQEIILWSGGYIYDQSLQVVSCEGCSYYADCYVKCINVKEKCMFA"
	
	s1 = "HWCDVHFGSARYPWCMAFPGSNGFFYMELEMAWAYLMYWMCQAIPSCTGYCKKIQHIHWTYALDSGTLQQHFLTVKVIPNVVCRFQSTFPKECRLNHLQHCKMNRIPRNDGQAHGEHCEKPEHTDDTCMLSNQQIINRLEINCGNPRNWSPREIEMCQRFWAKADYSHFCEAAASGMYTLHEKEFQTVTEMVFVRFGVDGNAWIHTGHCRGWFIFSAYRCMRTITRARLAPEWSQGSEETCDIHLETFGIPQNTRWHMKDCHSKEGSGSNKWINFEQVKSLNTAQPHYLNNARGNDIGAGPHKLNPELMVIFLMGHVSRVSRAHTDFCMLARQEPEVGQMLLTEDNMHNAYNSYNSICKINYKFPHIQKKQWHWQAKGHCHYMGIGCCLTCPRQKEHPHICTVTGTVWDLFLMYLTEWRSVCASADSSEATDDNYDYSLFIACKMRDRPEWLLERKQGHFLHYTAEPSDHNVQMEKYELADIAMQSQYAHWCGYVCLCSYSRSCVSQIFANLQGQMMLGCSVYEDHYPPTWISSYFIKWPQIKCEDGLDKPCRCPASATNYHSHFAHVYPGQGYYCHRETIVPVHNYVGRSDVFWNVSHIDYHKTIEQRPLCTQVWETNACMDVEDLHNCSIFTLVLMWTSIKDKENFTIHYYYGSFAYNAFTPYNFEKAPDWRTRYYYICQDAPWVPEWFGQLMCMWWLFMLQCYVQKSDCNSVDASLKRGKEVWFMNPGYYAQQGMPFSQEHSFVVISLQTQWSWGITSWGAWLICAHHKDHAIGHEEPQNVAKCCRYFPEEYDDVTYRHERHTQGTAIPQDKPLIYKDKAIQFQTSHQIKTAFRLRPWYIMTCIKEGNTPWEDTPVLMEYNSPYRCSMVKATVPECQTPFTDQHKTRYCAVYWRCWISLTAIPSHPQTLDTRAPYPYYTEYMMYYYERRLYPYWIWALEYDWGNKCVEYKHNTHPCVHNDLNIIGMDTTMNSKHVKHYPESWQWSYTISRWYCKEFMEFRLFCSAKTRMNMQMYNIIDVTDIVFHSWMGYKQGHCLWIVMTPMSLQQIINSFAEDMKTLMIFIRLESLWKTVRELWRLIDWWYCQRDIMTNFVASEMPMSYKWRLHSQEGGCFWGKYSDFMCEFELEWMGKFACDDWVCCSSYQVDSVVSIGHHMRPEKGMKKNFVLTNYDERGYDDMRWSRLVAFSVRWGPLNVTAAMREWLKWVETNSTQEWSGIAADSNRRKHHDTDVYENNNVFIYMPGEMNEQVNACFLTPSEKLIFVESSEKHVPRHIQYHNCTAHSPGVTFYVCKIFINFRTFWVHFTHLMNQWWESYDWEWDFMQQTGYPAEEDATTRWVQNGDEFYIMYHNIQHRCHWADGPWWITIMLPMFVMMYVIDEEQPFEQLWYSSITWEYWWITPNCTYVMEQKECRWQCIGEYWELEGNIAHGGICYIESEWKKHHWCVMITPWMNDIRSCRPLCPEWREKDTFREADLEILGYFCKWQASCSFHYQYGEYCITMWWPRFEKYHCKYHIHCGWPTTGTYCMMSPLAFSCTFHAQMMSRCSARYWHWWNFCPYGSMYYCFGMVWWPWWNWVSHHSYNSCVKILPMTLCDGWWSLNYYDRYKSRPFLVQCTWGSAFERHRAWAIMKVYHVELCRRKFWRCYSSQMSSKSNTQENIMWCCGSCMDGNMLNSCLHVKRGGMITWQTRLPEIVPTWLPDWVEGWFDHWITRWGPKAHHYLFSYIMAMWNFIPQCDQYIWLQNGKWLYWCRQNTSMLEQKEDHTGKPGNGKKFITIPIFELHHRDIHTRADALGRSRLLWKKTCEEKHKKCECPFVWAQYRGVHIINVGAEVFPWQKQAVELAHIYRVFGQDQLNGQTKRQYVEFWDISAHFLFSKEGRAGPEQHECVPFDLYWCFCTDNVKMDMKYWFITIFTMHSPFGKYSYMVHEVMQFHYLDTNMQRDWMVLSRGSMPFHFSAQEHHHEWWTYVHFSISADSSDHDLWMEKVSFNKCCHHWCKALYLHLEYMYQITHVTHFEVIPDRRFTEMLLFNHIGMHRNMCYHHLMWVWKDRKCWPYNKAGFEHYYCFCARLGCAKMERDCFNVLQSAQANECWWWCLTNQQKDPHSTQRAPNCFGMINDCDILMAVAHRNLLIQMRVPYDEARNHEDNCDIEDCMVMEMEYVCRWQCINQRVIHTWLDYCFRADNSGHPPQAIAFCRAISSMPHTRSEYPMIGDIEMMLHCPVCTNRLRSTIQHKLNIVMESAYLSCYMEIVPAIDTRITVKTAVCMAWFDSVREEYCKEKIGINLQGDKDAQNACYRLNILQTWIKDWGCDVRPATPFMMNPWEHTLLGQDLHDSCMQNLAWHNATECFKNVTDMGGAIHDCWAITHPCYMICQCKYECMDGAERVSRHTETGFKLGWTQPKDDSSLSSYWDYGLTKSKEMTLQTWPYYKTMKCHSYGQHFPHQHTLKWIGAVIAYMQEPTADYWPWWATKVCENKARRAHSVTSSEHHAVQIQQFHVTGVYVGDLAHCNEFKRNVCAYVKGHRGFRVKESLQNIEKDCWNGSGVGSNNCNTRLCEQWQNLGDAYEKYFQDYIQSYGRTNTMHDGTHIPQIGEYSWSIYLLLVQAHFGYCMHRYMACCDRRFQEMAGQARYRFMDVSQQIGEAPATYHEDHEVISTYQNAKCHMCYTKPHHQFWLPHYDDQSESRWYNQNFLHPQDFHRLADTNGGFQMYQDKDRFHFVTPCCPVTYIGEKKGLYSFNSCKECVWTLLMFCTQYGHKKDTFPGATSDPTAIKTAHIYAWCTKRGRGHMALITFNVVGTIYPAHYNFKPQKHWHCPHVNMLNQPMMDSEIEVRKAYTSRSDDVISETSPVGKKCDMCMVPHSYQDGEYTFQIAGCCKSHTKEADAYLQLIYTPDVKNSNGAAEDTEHAHMKHMKSGVNKGRVDKMINRKFTVRMASQGWFFSCCMDGHWKACWCVFKDVAQPQDYMEPITWGNSGYDSWISHAVWSQWNDCNPWFINPYRIYVNEFHRLEVIQRKNNTMIFSYRRPDAQMQYTEVKTNLFNKDVNECPCHSRWKCVCHCYKHAIGEHWAIRVVFSCVMTQQLELLCFLDTNDGYYWFLHQDNVRFQMHVTYQNCAEQRFNKGQPFERWQHWFGCPEFGRMIRHLQHQCDMCDPSGDRWHDDCKTMPWHSVTAQGTMMHHWEQATMANIEMATFSPAGLKNFLCLNHGALFIQTAMSAYVCKQPDQTGFAIPWTLVVKSFSVLYIELAWMSPVHTAYCMMINVFTQGIATMTIQLQLQKTGQIYVSQMQQSQSETGILAQNLDCERQQLAPVPWMETVMTWLCSWFVSHMMYYGHFSNGSRYRPMSPARLCEERFGTYKSKNIHWETMHSGWWPNMKEPMGGRNNCINSYECKHADSETNAVEQTTRFCEVIFYPRYESRRQWLEGWRHIVSAVMEQEYCRRGCFEKDCPSIVLVRQTQDYHDIKDSVCIHRLRKLQLFGHRIILVLADGQYRVQWVTYKLTKDVHINHWNLLFPDDFHILMRTMPSHCWEDTCGCPGGTIMFRAVNHADWYCDRKLWHKHRVWKANRIKGNLQCYERRQQWGKCYWWVRVQHTGIWCDPEWNCKHHVAPYLSLCWLCWMPPFWTPLGETLCSESILIELMQFAQSSSEGERGGLTTCSDRWAVDPRTPNNKTEQSYVWCNMECVWGACIHHPETVPDAIITDNWSFSHMGPHGAAECMQLTDEPEWPLEETLWSFAHERDFKTMQCWPNIPTRHYLQWNMGYQSFGQVICRPEIVCQIWGFYDQVGQGEHYRLFMNQKKEKVKAHQAKDQDSFTFYKYKAHIDYNDATHHVSACYLMTTMNPTCQFSTFIAPANHCMNFQEENAYNWHVRLFYNQHQPDFMEFQATNCWDAKPDPANFQFLHDIRDGYQDIASPIPKLVICLYQQVGVIPPYDEIVAMQQDHCQIGCMFVEGMLDISWQEQWIGSYQACKPIRSCIKEPQDQQKWIAGDHVGSDYMWFMFMNGDRIPQAEPQVQPGQCSLARDIMPVRFAGYYDAFWDMLYHTDEHKYFNNAAMICPPFVHDWDLMPSDDTWQWNQNWKPQVMYPIYADEDYLYFDTRLVCTPIYQRS"
	s2 = "RHAYHHDWIDAFPTAHFIYEWEMELAMYYHEYAVVFWAYLMYWMCQAIPSWTKIQHIHWTYPLDSITIFPAFCDSQHFLTVKSIPNVRFQSTQANDWWGMIPKMNRIPRQAHGEHCEKPEHTDDTCMLSNQQIINRLEINCMGQNWSPRRIEMCQRFWWKQSPDPMFNDYSHFCEAAASGMYTHEGEFQVNNQGPLSTLTEMVFVRFGVDRREMSNKWIHDGHCWFDESAYRCMRTISRARLAPEVMNSDLNERLPYSEETQGKPPQNTRWHMHSKEGSGSNKWINFEQVKSLNTAQPKDSDFHCLNNARGNDIGAGPHKLNPMQFMCADYVVGDQLMGHVSRTTYISSRCETDPCMLARQEPEVGQTEDTMCYTTLCKINYKFPFHLYEECNCQKWHWQAHLHYGCCPTAPAQKEHPHICTDHRRTGTQWKAPARISLFLMYLTEWASVCASADSSEATKDNYAHIYSLLIACPDKTMGQNMRDRPEQGHNLAVHSIYTAETDEAPDHNVKMEKYELAQYHHHLHTSWCGYVMNSWRMEHGSRHCVSQIFANLQGQKGSKRTNMLGCSVYEDWYPISSYYIKNPQIKCEDGLDPPCRCPASATNYHMHFAFVYGGQGYVHNYVGIWSDSGQFWNVSHQEYHKTIEQRPLCTPDEVWETNACMCEFSTTVDLHNCSIFTLVAVLDMLSMMNCPKENFTIHPRQEYGQLWHFAYNAFPEKAPDWRTRYYYICQDCPWVPEWFGQLMCIIAPWWLFMLQCYVQKSFTVCNSFDASLKHGKEQNRVMTWFDNPGYYAQQGPFMWFHDTEKAWEHSVISLQTGWSWGITSWGAWLAHHKEILQNVAKCCREFPEEYDDVTNRWEHLHTPGTAIPQDKPQFKTQFIRRWLRPWGIMTCRPLQKEGNTPWEDTPVLKWPVMMHEWEYNSPCQHMVKATVPDWQTPVTDQHKTYWHFIYCAFIVMNTPHWWRIVNCMPTDAIPSHPETLTTRAPYPYYEVNIFQPRLYPYWVGNKCVEYKHNTHPTVHNDLNCATIWVNKCIGMDTTMDSKKVKHYPEDTSWWYCKEFARQCQEFFCSAKTRMNTDIVFASWMGSSIAQDLLHMHYVMPMSNIQIINCLLDFAEDMKTDSIFIANVSGDNEVLEELWKTVRELWRLIMYVDTRWWYCWRDIMTNFVASEMPMSYKFVLRLHSSEQSITEGGCFKYSDFMCHQWNDFELEWMGMTACDDWVCCSAIVKRYQVDSVVSIYHIMEKDSYAVPIMGMKKNFVSWGKSTHTLTRPACDLMFYDERGYHKMMWSRLYAFSVRWGPNNVKAADNSTQEWYMWCAWIAADSNRRVHHDTITQCWVYENNNVFIYSPGECNEQVNACFLTVESSEKHVPVWHIQYWMIKNMNFYCAHSRHFALHGMGVTYVWSKIFINFRTHFELFCHHHFTHLMNQWWESYDWEWDFMQQTGYPAHRDDGWEFPIGWYVLVWVIMDEDCNGDEFYIDNVVIGMQLMFHNCGDSQLNTMGCHWADGFWWITIMYPMNRMVMSVQPFDGIDEQLKYSWLNITWEYWWTSPNCTYVKQIGEYTGFAEILYELEGNIHHGGICYIISHWCVMITPWMQDIRWCRPLCMEDDDREKDTCREADEEGDGRKTPHSFFDCATSFHYQYSEYCITMWWPRGKNCFEKYHCCGNNTGTYTTGLVIRTDMKAFSCMYMNVDRPHWWNFCPYGSMYYCFGMAWWPWWNWVSHNLSYQEVNEYKWCGKIPMCDGYYDGSHIKSYWRAFSKAIATWLVQLTWGSAFEIMMTHRAWAIQLSCPSKVYVLCRRKFWRCYSSQKSNTQENIMWCCGSCSDGNMLNSNVMPDHVKREGMITWQTRLPLPDIVIGWFDHWITRWGPAHHWLHWPHMPLETWNFIPQCDQYIWLQNGKFTSMLEQKKPGNGKDQEWIPIFELMHRDSHTRADALGRSRLGQPIPVQAFTCEEKHKKCECPFVWAQYHVHIINVGAEVFPWQKQAVELAHIYRVRYAMRSEFPGQTARQYVEDSIRYWCDISAHFLFSKEGRAGPEIHECVPFDLNVKIGSCGKYNYSVRPRDMKYWHITIFTMHSPFGKYSYMWQWKKNYCEVQGGVKPMYRWKFLFHDWMMPFHWFEINQGWWTAIKFHYFTKVHFMVSISADTSDHDLWMEKVRFNKCDHHKNDLCKALYLHLCYLITHYAITKVIHAWKVIADRRFTEQLLNNHINHRQIEFMHENMCEHHLMWVWYALRPKIAPYNKAGFEHYYCFCARLGCAKMERDCFNVLQMAQANQQDPHSTQRAPNCFGMINDCDILMAVNETDFEANDALEAWIIMRCPPITWLDQQYSYTIDEARNHCWTMIILYTLVLVWRDLEDKMGMEMEYVCRWQCINQRVIRLYGFVFRYDNSGHPPDAKAIAFCRAANHTSSMPHTRSEYPMIGDIEMMLHCPVCTEDAVRLRNTIQHKLNIVMESIYLSCYMEIVPQHCMAWFDSVRECKEKIGINLQYDWHCQHWACYRLNILQTWIWYACDFRDNHMLMGCDVEPLTAFMMACGVDTTLSSDLVDAHLLVAGQYLHDSCMQNNAHVCFWHHCTNEWPTFFTDMGGAIVVTRMVLFLRGCDKERMICFGEQCKYECMDGAEFWEFEPTRHTYLCEAYLEGFLLGWTFVPKDDSSISDLTWDYGLNRKSKEMTLTHKCKAIPSYVTNRRRYNQHFPCQHTKKIIGAVIAYMQEPTADFWPWWATNVCEEWKVRKARRAHLMILQWCVTSSQFHVTGVDVGDLAHCKEFKRNVCAYTKGHGGGRVKEGLPHEMDQWRNIEKDCWNGSGVVKSNNMEFSNERNEEQWYDNLGDRYEKGFYIIISLDSYGAWMDYWAIHIEYSWSSIRLRYLLLVQAHFGMWYECMHRKMACCDRPFQEMAGQFMDVSQQEGTYHEDDEVISTMFYQNYWNPEETKPHHYESFLHFDHLLTWCFHRLADTNRGFQDKDRFHTCNEKKGLYSFNVMIHIMSTKECVWTLLEFCTQIGHKKATHPFYSYPQVPLATSHPTAIKTAHIYAWCTKRGITFNVMQETTISEGTVLFQHYPAHYNFKTGQKHDHCPHVNMLNQPMMDSESRSRFSHWSFNRDVISNTKCHDCHQVWMWTTFQIGGCEKSHTKIYTPDKNSNGAAVPPCMVEEYDLKPHMKSGVNKGRVDVMINRKFTVFSHCMNACWCVFKDVAQPQDIMEPITWGNSGSWIYHAVWSQWEDCPPWFIVPYRVEVIQHQKNNRYIHIYGDCWGQMQYTEVKTNLFNKYVNELPCHSRWKCVCHCYKHAIVEHWAIRVVFSCHFQHTQQPCPKWDTNDGYYWFLHQDNVSFQMHVTYQNCQIQFYMSLRRTLRWQHWMQHQCPACDPSDDRWPEHISDDIYTISRYMYKTMQWHSVAAQGTMCDFPIRHNIEMPTFSDVEAQHIALHGPAVIQTAMVAYVCKQPDQTGFIHWWNGTSDTIAWACPVHTANCMMINVFTQFRWYGVGATMTIFMVAMPGACAQLWCQTMGQIYVSNMQNLDCERQHLVPWMETVMTWLWFDTRNWTVSHMMYYGHASNGSRYRPMPARLCEERFIINYTYMHSGWWPNMKNKEYNIPMGQGNNCIMTTTETSYETEQESSKIKHADSETNAVIFVKLYESRRQWLENQMTLFKNKWFANQQHIVSAVDEQEYCRRGCFEKDCPALVRQQDYNWQAYVMDIKRQVFVLIHCLMKLALIMHQIKLVLADIQYRVQWVTYSANPWQEIRPIQELFPDDFHILMPCHEDTCREMCPPGTGMFRKGCFWYRTNIREANFAWYCDRVFQCYCYIWVRVQVTGIWCTPYWNCKAPYLSLCLHLCFMPPFWTPLGETLCVEWWLKELMQFIQSASEGERGQLTMRNVDMQSDRWAVDPRPDRWYPNKTEQSYVTCNMECVWGACIHHPETDAIITDNIGITKSFSHMGPHEPEWPLEETLWSQAHERDFKTMQCWPNIPTRHYLQWNMGYQSGGQVICRHEIVHGVGQGEHYRLFMEAHPVAKDQDCFPTFYKEKAHIRYNDATHHVSACTLMTTMNPGCSHVRFSTFIAEHMVDANHCMTVHWVEDKAFQEENAYNMKHCHDDIDFKEATSCWDAKTHWIHTDDPANFQKKLHDIRETTYLWPFPGYQDIALVICLQQVQEIVIPPHCIDDEIVAMQDHCQIWCMFHEGMLDVFLVSKRALFTGMCGFFQQEQWIGSFQPELDFWPCKPIKCIRSCIKEPQDQQKWIAYHVGSDYMWFMFNNGGTYIMAFMAEPQPEQFSLAEVIMPVRFASYYCAEDAFWDGEQGYIQLYIQLPWTDEHKYTNNAPFVHDWDLMPSSDDWQDNQNWGAWQVMYCHIYADEDYLYFRPCGTRLVCTPIVQRS"

	print(score(s1, s2))

	outputstr1 = ""
	outputstr2 = ""

	Output(Backtrack, s1, s2, len(s1), len(s2))
	print(outputstr1)
	print(outputstr2)

if __name__ == "__main__":
  main()