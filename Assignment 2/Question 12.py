# Prompt: Construct the Burrows-Wheeler Transform of a String
# Given: A string Text.
# Return: BWT(Text).

def bw_encoder(s): # Apply Burrows-Wheeler transform to input string
    s = s + "$"  # Add "$" to the end
    temp_list = sorted(s[i:] + s[:i] for i in range(len(s)))  # sorted list
    last_column = [row[-1:] for row in temp_list]  # Last characters of each row
    return "".join(last_column)  # Convert list of characters into string
# end bw_encoder()

def main():
	ref_genome = "ATAATGTGAGTACTCATTAATTACTCACTCCAACGTTTTGGACCTTAAGGATATCTTTCTGTGATACGCCAACACCCGCAGTCCTCTCCTCTGCACATCCATAAACGTTGTGCTTCACGGTCTGTACCGCCAGTATGATGGTCGCTCGTTTATGGAACCCCAATTTGGATGCGGTACGAGAAAGCAGAAAATTTTAGTATTGCGAGAGCCTTTGGGTACACGAGGCGGACGAAGCCCATCATCAACAGAATGTGCAGGGCTAATGACCCATTGAATTGTTGCATCTAAGGGAGATGCGTGATCACTTCTGTAGACATTAAATTAAGGTGACCCCCCTCTGTCACCCGTCGTCGTCAGACACATATCGGGAATGCGTATGCCGCTCATGTGTGAGATAACCCTACAGTTGAACGTAGCGGTCACGCGAACGCCTATAAGCTGGTCAATTCCTTTATCAGCCCCACAACAGGCAGCGTAAAAGACTAACTTACTCAAGACACCAAGCGGCGATCTAAATCTTGGATCCCCAGAAGTCATTAAACAGGCCTGTTGGACCCTTGTAGGGGCGAACGCTCAGCAATGGATGCGGATATTTGGACTACGGGTCGGGGAGGATGCCTATCGGAGCGGTGAGAATTAAGGCATGCAAGTTTCTAATAGACGGGTTGAAACGAGGTCTCTTGAAACACTCCGAGATTGGCCTACTATTTCAGGTCACCTGAAGGTAACTTGTGCTATTTGGATAGGCCAAACATGCTCATATGGACGCGTTCCTCGCAGTCGGTTGCTGTGACGCATATGGAGTAACATCGCTATTGTTAAAAGGCCGCTGACACTCAAACCGAGCTTCACATCGCGGGCTGCCGTGTAA"
	encoded_ref = bw_encoder(ref_genome)
	print(encoded_ref)

if __name__ == "__main__":
  main()